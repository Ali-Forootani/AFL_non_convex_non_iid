Batch of images shape: torch.Size([64, 1, 28, 28])
Batch of labels shape: torch.Size([64])
Batch of images shape: torch.Size([64, 1, 28, 28])
Batch of labels shape: torch.Size([64])
CNNMnistModel(
  (conv_layers): ModuleList(
    (0): ConvLayer(
      (conv): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU()
    )
    (1-2): 2 x ConvLayer(
      (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu): ReLU()
    )
  )
  (pool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=32, out_features=10, bias=True)
)
Number of clients: 2
First client's train loader size: 750
Global test loader size: 313
Federated Rounds:   0%|          | 0/100 [00:00<?, ?it/s]Federated Rounds:   0%|          | 0/100 [00:00<?, ?it/s]

Starting federated learning round 1/100
Selected clients: [0, 1]
Traceback (most recent call last):
  File "/data/bio-eng-llm/AFL_non_convex/src/training_mnist_fl_async_non_convex_random_selection.py", line 288, in <module>
    asyncio.run(main())
  File "/gpfs1/data/bio-eng-llm/virtual_envs/dnn_env/lib/python3.10/site-packages/nest_asyncio.py", line 30, in run
    return loop.run_until_complete(task)
  File "/gpfs1/data/bio-eng-llm/virtual_envs/dnn_env/lib/python3.10/site-packages/nest_asyncio.py", line 98, in run_until_complete
    return f.result()
  File "/data/bio-eng-llm/miniconda3/envs/gnsindy_3/lib/python3.10/asyncio/futures.py", line 201, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "/data/bio-eng-llm/miniconda3/envs/gnsindy_3/lib/python3.10/asyncio/tasks.py", line 232, in __step
    result = coro.send(None)
  File "/data/bio-eng-llm/AFL_non_convex/src/training_mnist_fl_async_non_convex_random_selection.py", line 249, in main
    ) = await federated_learning_with_mnist_cnn_4(
  File "/gpfs1/data/bio-eng-llm/AFL_non_convex/src/mnist_trainer.py", line 457, in federated_learning_with_mnist_cnn_4
    clients_models[i].load_state_dict(server_state_dict)
  File "/gpfs1/data/bio-eng-llm/virtual_envs/dnn_env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 2215, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for CNNMnistModel:
	Missing key(s) in state_dict: "conv_layers.3.conv.weight", "conv_layers.3.conv.bias", "conv_layers.4.conv.weight", "conv_layers.4.conv.bias". 
